[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Accessing Fiscal Policy Effect using Structural VAR",
    "section": "",
    "text": "Abstract. This is a suggested formatting for your abstract. This quarto document is a template for your report. It includes some basic ways of working with such documents. You are invited to learn more about developing online reports with this technology.\nKeywords. fiscal policy shock, SVAR, impulse responses, tax shocks, stock price\n\n\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\n\n################################### WARNING ###################################\n# We noticed you have dplyr installed. The dplyr lag() function breaks how    #\n# base R's lag() function is supposed to work, which breaks lag(my_xts).      #\n#                                                                             #\n# If you call library(dplyr) later in this session, then calls to lag(my_xts) #\n# that you enter or source() into this session won't work correctly.          #\n#                                                                             #\n# All package code is unaffected because it is protected by the R namespace   #\n# mechanism.                                                                  #\n#                                                                             #\n# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#                                                                             #\n# You can use stats::lag() to make sure you're not using dplyr::lag(), or you #\n# can add conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop   #\n# dplyr from breaking base R's lag() function.                                #\n################################### WARNING ###################################\n\n\n\nIntroduction\n\n\nLiterature Review\n\n\nData\n\n\nMethodology\n\n##| label: tbl-irf\n##| tbl-cap: Impulse response of gdp to unanticipated tax increase by 1 pp. within two years\n#irf_gdp_tax = matrix(apply(irf[3,1,1:9,],1, mean), nrow = 1)\n#rownames(irf_gdp_tax) = \"change in gdp [%]\"\n#colnames(irf_gdp_tax) = 0:8\n#knitr::kable(irf_gdp_tax, digits = 3)\n\n\n##| label: fig-irf\n##| fig-cap: Impulse response of gdp to unanticipated tax increase by 1 pp. within five years\n#irf_median    = apply(irf[3,1,,],1, median)\n#irf_hdi       = apply(irf[3,1,,],1, HDInterval::hdi, credMass = .68)\n#plot(x = 0:20, y = irf_median, type = \"l\", bty = \"n\", \n    # xlab = \"horizon\", ylab = \"change in gdp [%]\",\n   #  ylim = range(irf_hdi))\n#polygon(x = c(0:20, 20:0), y = c(irf_hdi[1,], irf_hdi[2,21:1]), col = \"deepskyblue1\", border = \"deepskyblue1\")\n#lines(x = 0:20, y = irf_median, lwd = 2, col = \"deepskyblue3\")\n\n\nnominal_gdp <- read_abs(series_id = \"A2304420C\") # GDP per capita: Current prices ;\n\nFinding URLs for tables corresponding to ABS series IDA2304420C\n\n\nAttempting to download files from series IDA2304420C, Australian National Accounts: National Income, Expenditure and Product\n\n\nExtracting data from downloaded spreadsheets\n\n\nTidying data from imported ABS spreadsheets\n\ntmp.gdp.nominal <- xts(nominal_gdp$value, nominal_gdp$date) # 1959-09-01\nna.omit(tmp.gdp.nominal) \n\n            [,1]\n1973-09-01  1035\n1973-12-01  1100\n1974-03-01  1134\n1974-06-01  1149\n1974-09-01  1216\n1974-12-01  1276\n1975-03-01  1299\n1975-06-01  1355\n1975-09-01  1393\n1975-12-01  1456\n       ...      \n2020-09-01 19051\n2020-12-01 19932\n2021-03-01 20810\n2021-06-01 21298\n2021-09-01 21240\n2021-12-01 21865\n2022-03-01 22728\n2022-06-01 23533\n2022-09-01 23680\n2022-12-01 24060\n\ndeflator_gdp <- read_abs(series_id = \"A2303730T\") # GROSS DOMESTIC PRODUCT ;\n\nFinding URLs for tables corresponding to ABS series IDA2303730T\n\n\nAttempting to download files from series IDA2303730T, Australian National Accounts: National Income, Expenditure and Product\n\n\nExtracting data from downloaded spreadsheets\n\n\nTidying data from imported ABS spreadsheets\n\ntmp.gdp.deflator <- xts(deflator_gdp$value, deflator_gdp$date) \nna.omit(tmp.gdp.deflator) \n\n            [,1]\n1959-09-01   5.8\n1959-12-01   5.9\n1960-03-01   6.0\n1960-06-01   6.1\n1960-09-01   6.1\n1960-12-01   6.2\n1961-03-01   6.1\n1961-06-01   6.1\n1961-09-01   6.1\n1961-12-01   6.1\n       ...      \n2020-09-01  97.4\n2020-12-01  98.7\n2021-03-01 100.9\n2021-06-01 102.7\n2021-09-01 104.6\n2021-12-01 104.1\n2022-03-01 108.0\n2022-06-01 111.3\n2022-09-01 111.8\n2022-12-01 113.6\n\nhead(tmp.gdp.deflator)\n\n           [,1]\n1959-09-01  5.8\n1959-12-01  5.9\n1960-03-01  6.0\n1960-06-01  6.1\n1960-09-01  6.1\n1960-12-01  6.2\n\nreal_gdp <- tmp.gdp.nominal/tmp.gdp.deflator\ngdp <- log(na.omit(real_gdp)) # 1973-09-01 to 2022-12-01\nhead(gdp)\n\n               [,1]\n1973-09-01 4.571913\n1973-12-01 4.587152\n1974-03-01 4.582501\n1974-06-01 4.561741\n1974-09-01 4.569625\n1974-12-01 4.563721\n\ntotal_tax <- read_abs(series_id = \"A2302794K\")\n\nFinding URLs for tables corresponding to ABS series IDA2302794K\n\n\nAttempting to download files from series IDA2302794K, Australian National Accounts: National Income, Expenditure and Product\n\n\nExtracting data from downloaded spreadsheets\n\n\nTidying data from imported ABS spreadsheets\n\ntmp.tax <- xts(total_tax$value, total_tax$date) \ntax <- tmp.tax / tmp.gdp.deflator # 1959-09-01 to 2022-12-01\n\n\n\nPreliminary Results\n\n\nReferences"
  }
]